name: CI/CD Pipeline

on:
  
  workflow_dispatch:
    inputs:
      log_errors:
        description: "Log errors if tests fail"
        required: true
        default: "false"
        type: boolean
      build_version:
        description: "Enter the build version (e.g., v1.0.0)"
        required: true
        default: "v1.0.0"
      deploy_to_production:
        description: "Deploy to production? (true/false)"
        required: true
        default: "false"
        type: boolean

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: "3.11"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pytest
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

      - name: Run tests
        run: pytest

  build:
    runs-on: ubuntu-latest
    needs: test

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build Docker image
        run: docker build -t flask-app .

      - name: Tag Docker image
        run: docker tag flask-app ${{ secrets.DOCKER_USERNAME }}/flask-app:${{ github.event.inputs.build_version }}

      - name: Push Docker image
        run: docker push ${{ secrets.DOCKER_USERNAME }}/flask-app:${{ github.event.inputs.build_version }}

  deploy:
    if: ${{ github.event.inputs.deploy_to_production == 'true' }}
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Deploy to production
        run: echo "Deploying version ${{ github.event.inputs.build_version }} to production"
